// region is NxM
const N : 3
const M : 3
const MAX : N * M

matrix grid : [ 1 , MAX ; 1 , MAX ] of values 1, MAX

// Values in rows must be different
forAll row : 1 , MAX
    allDiff grid[row][..]

// Values in columns must be different
forAll col : 1 , MAX
    allDiff grid[..][col]

// subgrids
/// Left triple column
forAll col : 1 , M
    allDiff grid[1][col], grid[2][col], grid[3][col]

forAll col : 1 , M
    allDiff grid[4][col], grid[5][col], grid[6][col]

forAll col : 1 , M
    allDiff grid[7][col], grid[8][col], grid[9][col]

/// Middle triple column
forAll col : 1 , M
    allDiff grid[1][ col + M ], grid[2][ col + M ], grid[3][ col + M ]

forAll col : 1 , M
    allDiff grid[4][ col + M ], grid[5][ col + M ], grid[6][ col + M ]

forAll col : 1 , M
    allDiff grid[7][ col + M ], grid[8][ col + M ], grid[9][ col + M ]

/// Right Triple column
forAll col : 1 , M
    allDiff grid[1][ col + 2 * M ], grid[2][ col + 2 * M ], grid[3][ col + 2 * M ]

forAll col : 1 , M
    allDiff grid[4][ col + 2 * M ], grid[5][ col + 2 * M ], grid[6][ col + 2 * M ]

forAll col : 1 , M
    allDiff grid[7][ col + 2 * M ], grid[8][ col + 2 * M ], grid[9][ col + 2 * M ]


// Clues (64 clues in total, this leaves 81-64 = 17 numbers to be found)
grid[1][1] = 6
//grid[1][2] = 3
//grid[1][3] = 7
grid[1][4] = 2
//grid[1][6] = 5
//grid[1][7] = 8
grid[1][8] = 4
//grid[1][9] = 1

grid[2][1] = 5
grid[2][2] = 1
//grid[2][3] = 8
grid[2][4] = 6
//grid[2][5] = 3
//grid[2][6] = 4
//grid[2][7] = 2
grid[2][8] = 9
grid[2][9] = 7

grid[3][1] = 2
//grid[3][2] = 9
grid[3][3] = 4
//grid[3][4] = 1
//grid[3][5] = 8
//grid[3][6] = 7
grid[3][7] = 3
//grid[3][8] = 6
grid[3][9] = 5

grid[4][1] = 7
grid[4][2] = 2
//grid[4][3] = 1
grid[4][4] = 3
//grid[4][5] = 4
//grid[4][6] = 6
//grid[4][7] = 9
grid[4][8] = 5
grid[4][9] = 8

grid[5][1] = 8
//grid[5][2] = 4
grid[5][3] = 6
//grid[5][4] = 5
//grid[5][5] = 1
//grid[5][6] = 9
grid[5][7] = 7
//grid[5][8] = 3
grid[5][9] = 2

grid[6][1] = 9
//grid[6][3] = 3
//grid[6][5] = 7
grid[6][6] = 2

grid[7][1] = 1
//grid[7][3] = 2
//grid[7][4] = 9
grid[7][6] = 8
grid[7][7] = 4

grid[8][1] = 4
//grid[8][2] = 8
//grid[8][3] = 5
//grid[8][4] = 7
//grid[8][5] = 6
grid[8][7] = 1

grid[9][3] = 9
grid[9][5] = 2
//grid[9][6] = 1
grid[9][8] = 8
grid[9][9] = 6
